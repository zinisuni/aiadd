# user nginx;  # OpenResty Alpine에서는 이 설정이 필요없음
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 접속자 수 추적을 위한 공유 메모리 영역
    limit_req_zone $binary_remote_addr zone=queue:10m rate=10r/s;

    upstream api_servers {
        server api:3000;  # Docker Compose 네트워크에서는 서비스 이름으로 접근
    }

    upstream app_servers {
        server test-app:8080;  # Docker Compose 네트워크에서는 서비스 이름으로 접근
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            limit_req zone=queue burst=5 nodelay;

            # Redis를 통해 현재 접속자 수 확인
            access_by_lua_block {
                local redis = require "resty.redis"
                local red = redis:new()
                red:connect("redis", 6379)  # Docker Compose 네트워크에서는 서비스 이름으로 접근

                local current_users = red:get("current_users")
                if not current_users then
                    current_users = 0
                end

                if tonumber(current_users) >= 100 then  # 최대 동시 접속자 수
                    return ngx.redirect("/waiting.html")
                end

                red:incr("current_users")
                red:expire("current_users", 300)  # 5분 후 만료
            }

            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /waiting.html {
            root /usr/share/nginx/html;
            try_files $uri =404;
        }

        location /api/queue/ {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # 세션 종료 시 접속자 수 감소
        log_by_lua_block {
            if ngx.status == 200 then
                local redis = require "resty.redis"
                local red = redis:new()
                red:connect("redis", 6379)  # Docker Compose 네트워크에서는 서비스 이름으로 접근
                red:decr("current_users")
            end
        }
    }
}